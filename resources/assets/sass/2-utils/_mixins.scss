////////////////////////////////////////////////////////////////////////////////
//  autofill fix
////////////////////////////////////////////////////////////////////////////////
@mixin autofillfix($name) {
  &:-webkit-autofill {
    @include animation-name($name);
    @include prefix(animation-fill-mode, both);
  }

  @at-root {
    @include keyframes($name) {
      @content;
    }
  }
}

////////////////////////////////////////////////////////////////////////////////
//  generate colors
////////////////////////////////////////////////////////////////////////////////
@mixin colors($max-count, $color-frequency) {
  $color: 360 / $max-conunt;

  @for $i from 1 through $max-count {
    .s#{$i} {
      background: hsl(90%, ($i - 1) * ($color / $color-frequency), 40%);
    }
  }
}

////////////////////////////////////////////////////////////////////////////////
//  convert to rem
////////////////////////////////////////////////////////////////////////////////
@mixin rem($property, $values...) {
  $n: length($values);
  $i: 1;

  $pxlist : ();
  $remlist: ();

  @while $i <= $n {
    $itemVal: (nth($values, $i));
    @if $itemVal != "auto"{
      $pxlist : append($pxlist, $itemVal + px);
      $remlist: append($remlist, ($itemVal / 10) + rem);
    } @else {
      $pxlist : append($pxlist, auto);
      $remlist: append($remlist, auto);
    }

    $i: $i + 1;
  }

  #{$property}: $pxlist;
  #{$property}: $remlist;
}

////////////////////////////////////////////////////////////////////////////////
//  opacity
////////////////////////////////////////////////////////////////////////////////
@mixin opacity($opacity) {
  opacity    : $opacity;
  $opacity-ie: $opacity * 100;
  filter     : alpha(opacity=$opacity-ie); //IE8
}

////////////////////////////////////////////////////////////////////////////////
//  line-height
////////////////////////////////////////////////////////////////////////////////
@mixin line-height($height: 12 ){
  line-height: $height + px; //fallback for old browsers
  line-height: (0.125 * $height) + rem;
}

////////////////////////////////////////////////////////////////////////////////
//  circle radius
////////////////////////////////////////////////////////////////////////////////
@mixin circle {
  @include border-radius(50%);
}

////////////////////////////////////////////////////////////////////////////////
//  width && height
////////////////////////////////////////////////////////////////////////////////
@mixin wh($w: null, $h: null) {
  width : $w;
  height: $h;
}

////////////////////////////////////////////////////////////////////////////////
//  centerer
////////////////////////////////////////////////////////////////////////////////
@mixin centerer {
  @include position(absolute, 50% null null 50%);
  @include transform(translate(-50%, -50%));
}

////////////////////////////////////////////////////////////////////////////////
//  centerer 2
////////////////////////////////////////////////////////////////////////////////
@mixin centerer2($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top   : 50%;
    left  : 50%;
    @include transform(translate(-50%, -50%));
  } @else if ($horizontal) {
    left  : 50%;
    @include transform(translate(-50%, 0));
  } @else if ($vertical) {
    top   : 50%;
    @include transform(translate(0, -50%));
  }
}

////////////////////////////////////////////////////////////////////////////////
//  coverer
////////////////////////////////////////////////////////////////////////////////
@mixin coverer {
  @include position(absolute, 0 null null 0);
  @include size(100%);
}

////////////////////////////////////////////////////////////////////////////////
//  absolute block
////////////////////////////////////////////////////////////////////////////////
@mixin absolute-block {
  @include position(absolute, 0 0 0 0);
  z-index: 1;
}

////////////////////////////////////////////////////////////////////////////////
//  no bullet
////////////////////////////////////////////////////////////////////////////////
@mixin no-bullet {
  list-style-image: none;
  list-style-type : none;
  margin-left     : 0;
}

@mixin no-bullets {
  list-style: none;
  li { @include no-bullet; }
}

////////////////////////////////////////////////////////////////////////////////
//  custom-bullets
////////////////////////////////////////////////////////////////////////////////
@mixin custom-bullets($bullet-icon, $width: image-width($bullet-icon), $height: image-height($bullet-icon), $line-height: 18px, $padding: 14px) {
  margin-left: 0;
  li {
    padding-left   : $padding;
    background     : url($bullet-icon) no-repeat ($padding - $width) / 2 ($line-height - $height) / 2;
    list-style-type: none;
  }
}

////////////////////////////////////////////////////////////////////////////////
//   IE style fix
////////////////////////////////////////////////////////////////////////////////
@mixin ie-fix() {
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    @content;
  }
}

////////////////////////////////////////////////////////////////////////////////
//   Mozilla style fix
////////////////////////////////////////////////////////////////////////////////
@mixin moz-fix() {
  @-moz-document url-prefix() {
    @content;
  }
}
