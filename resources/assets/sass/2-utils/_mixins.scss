// -----------------------------------------------------------------------------
//  @author :: John Anthony Despi
//  @email  :: chattalogy@gmail.com
// -----------------------------------------------------------------------------

////////////////////////////////////////////////////////////////////////////////
//  autofill fix
//  -- fixes browser behaviour that puts color on an input field
////////////////////////////////////////////////////////////////////////////////
@mixin autofillfix($name) {
	&:-webkit-autofill {
		@include animation-name($name);
		@include prefix(animation-fill-mode, both);
	}

	@at-root {
		@include keyframes($name) {
			@content;
		}
	}
}

////////////////////////////////////////////////////////////////////////////////
//  generate colors
////////////////////////////////////////////////////////////////////////////////
@mixin colors($max-count, $color-frequency) {
	$color: 360 / $max-conunt;

	@for $i from 1 through $max-count {
		.s#{$i} {
			background: hsl(90%,  ($i - 1) * ($color / $color-frequency), 40%);
		}
	}
}

////////////////////////////////////////////////////////////////////////////////
//  convert to rem
////////////////////////////////////////////////////////////////////////////////
@mixin rem($property, $values...) {
	$n: length($values);
	$i: 1;

	$pxlist: ();
	$remlist: ();

	@while $i <= $n {
		$itemVal: (nth($values, $i));
		@if $itemVal != 'auto' {
			$pxlist: append($pxlist, $itemVal + px);
			$remlist: append($remlist,  ($itemVal / 10) + rem);
		} @else {
			$pxlist: append($pxlist, auto);
			$remlist: append($remlist, auto);
		}

		$i: $i + 1;
	}

	#{$property}: $pxlist;
	#{$property}: $remlist;
}

////////////////////////////////////////////////////////////////////////////////
//  opacity
////////////////////////////////////////////////////////////////////////////////
@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}

////////////////////////////////////////////////////////////////////////////////
//  line-height
//  -- mixin for lineheight with fall back for older browsers
////////////////////////////////////////////////////////////////////////////////
@mixin line-height($height: 12) {
	line-height: $height + px; //fallback for old browsers
	line-height: (0.125 * $height) + rem;
}

////////////////////////////////////////////////////////////////////////////////
//  Centerer
//  -- center an element inside a container that has a position of relative
////////////////////////////////////////////////////////////////////////////////
@mixin centerer($property) {
	@if $property == x {
		@include position(absolute, null null null 50%);
		@include transform(translateX(-50%));
	}
	@if $property == y {
		@include position(absolute, 50% null null null);
		@include transform(translateY(-50%));
	}
	@if $property == xy {
		@include position(absolute, 50% null null 50%);
		@include transform(translate(-50%, -50%));
	}
}

////////////////////////////////////////////////////////////////////////////////
//  Cover
////////////////////////////////////////////////////////////////////////////////
@mixin cover {
	@include position(absolute, 0 null null 0);
	@include size(100%);
}

////////////////////////////////////////////////////////////////////////////////
//  Absolute block
////////////////////////////////////////////////////////////////////////////////
@mixin absolute-block {
	@include position(absolute, 0 0 0 0);
	z-index: 1;
}

////////////////////////////////////////////////////////////////////////////////
//  No bullet
//  -- mixin for bullet removal [can only be applied in <ul></ul>]
////////////////////////////////////////////////////////////////////////////////
@mixin no-bullet {
	list-style-image: none;
	list-style-type: none;
	margin-left: 0;
}

@mixin no-bullets {
	list-style: none;
	li {
		@include no-bullet;
	}
}

////////////////////////////////////////////////////////////////////////////////
//  Custom-bullets
////////////////////////////////////////////////////////////////////////////////
@mixin custom-bullets($bullet-icon, $width: image-width($bullet-icon), $height: image-height($bullet-icon), $line-height: 18px, $padding: 14px) {
	margin-left: 0;
	li {
		padding-left: $padding;
		background: url($bullet-icon) no-repeat ($padding - $width) / 2 ($line-height - $height) / 2;
		list-style-type: none;
	}
}

////////////////////////////////////////////////////////////////////////////////
//  IE style fix
//  -- IE specific bug fixes
////////////////////////////////////////////////////////////////////////////////
@mixin ie-fix() {
	@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
		@content;
	}
}

////////////////////////////////////////////////////////////////////////////////
// Mozilla style fix
// -- Mozilla specific bug fixes
// /////////////////////////////////////////////////////////////////////////////
@mixin moz-fix() {
	@-moz-document url-prefix() {
		@content;
	}
}

////////////////////////////////////////////////////////////////////////////////
// Scrolling shadows
////////////////////////////////////////////////////////////////////////////////
@mixin scrolling-shadows($background-color: rgb(255, 255, 255), $shadow-intensity: 0.2, $shadow-color: rgb(0,0,0), $cover-size: 40px, $shadow-size: 14px) {
	background: linear-gradient($background-color 30%, rgba($background-color, 0)),
	            linear-gradient(rgba($background-color, 0), $background-color 70%) 0 100%,
	            radial-gradient(50% 0, farthest-side, rgba($shadow-color, $shadow-intensity), rgba($shadow-color, 0) ),
	            radial-gradient(50% 100%, farthest-side, rgba($shadow-color, $shadow-intensity), rgba($shadow-color, 0)) 0 100%;

	background: linear-gradient($background-color 30%, rgba($background-color, 0)),
	            linear-gradient(rgba($background-color, 0), $background-color 70%) 0 100%,
	            radial-gradient(farthest-side at 50% 0, rgba($shadow-color, $shadow-intensity), rgba($shadow-color, 0)),
	            radial-gradient(farthest-side at 50% 100%, rgba($shadow-color, $shadow-intensity), rgba($shadow-color, 0)) 0 100%;

	background-repeat: no-repeat;
	background-color: $background-color;
	background-size: 100% $cover-size, 100% $cover-size, 100% $shadow-size, 100% $shadow-size;
	background-attachment: local, local, scroll, scroll;
}

////////////////////////////////////////////////////////////////////////////////
// Pseudo
// -- When using ::before and ::after you'll always need these three, so we're
//    saving two lines of code every time you use this.
////////////////////////////////////////////////////////////////////////////////
@mixin pseudo($display: block, $pos: absolute, $content: ''){
	content: $content;
	display: $display;
	position: $pos;
}

////////////////////////////////////////////////////////////////////////////////
// Responsive Ratio
// -- For creating scalable elements (usually images / background images) that
//    maintain a ratio
//    Example ratios: [16:9] [4:3] [3:2] [21:9]
////////////////////////////////////////////////////////////////////////////////
@mixin responsive-ratio($x,$y, $pseudo: false) {
	$padding: unquote( ( $y / $x ) * 100 + '%' );
	padding-top: $padding;
}

////////////////////////////////////////////////////////////////////////////////
// Visually Hidden
// -- Hide only visually, but have it available for screenreaders
////////////////////////////////////////////////////////////////////////////////
@mixin vh($focusable: false) {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;

	@if $focusable {
		@include vh-focusable;
	}
}

////////////////////////////////////////////////////////////////////////////////
// vh @mixin Reset
////////////////////////////////////////////////////////////////////////////////
@mixin vh-reset {
	clip: auto;
	height: auto;
	margin: 0;
	overflow: visible;
	position: static;
	width: auto;
}

////////////////////////////////////////////////////////////////////////////////
// -- Allow the element to be focusable when navigated to via the keyboard
////////////////////////////////////////////////////////////////////////////////
@mixin vh-focusable {
	&:active,
	&:focus {
		clip: auto;
		height: auto;
		margin: 0;
		overflow: visible;
		position: static;
		width: auto;
	}
}
